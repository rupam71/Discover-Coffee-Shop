import Head from 'next/head'
import Image from 'next/image'
import Banner from '../components/banner'
import Card from '../components/card'
import styles from '../styles/Home.module.css'
import coffeStoreData from '../data/coffee-store.json';
import {coffeeApiKey, Authorization } from '../secret'
import getCoffeeShop from '../fetchCall/getCoffeeShop'
import useTrackLocation from '../hook/use-trackLocation'

// import context
import { useEffect, useState, useContext } from 'react'
import { ActionTypes,storeContext } from './../store/store-context';

export async function getStaticProps(context) {
  const w = await getCoffeeShop()
 
  return {
    props: {
      coffeStore : w,
      // Send coffeStore value as props name coffeStore
    }
  }
}

export default function Home(props) {
  const {handleTrackLocation, LatLong, locationErrMsg, isFindingLocation} =useTrackLocation()
  console.log('props',props.coffeStore)
  console.log({LatLong, locationErrMsg})

//  const [coffeStores, setcoffeStores] = useState('');
  const [coffeStoresError, setcoffeStoresError] = useState('');
  
  // context dispatch, state and property
  const {dispatch, state} = useContext(storeContext)
  const {latLong,coffeeStores} = state;
 
  // use context state.latLong here
  useEffect(async() => {
      if(latLong) try {
        const w = await getCoffeeShop(latLong)
        console.log({w})
    //    setcoffeStores(w)

        dispatch({
          type : ActionTypes.SET_COFFEE_STORES,
          payload : w
        })
      } catch (error) {
        console.log(error)
        setcoffeStoresError(error.message)
      }
  }, [latLong]);
  const handleOnBannerButtonClick = async() => {
    console.log('Hi Banner Button Click...')
    await handleTrackLocation()
   // console.log('LatLong',LatLong, 'locationErrMsg',locationErrMsg)
    
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner 
        err = {locationErrMsg ? locationErrMsg :
          coffeStoresError ? coffeStoresError :''}
        buttonText = {isFindingLocation ? 'Locating.... ':'View Store Nearby'}
        handleOnClick = {handleOnBannerButtonClick}
        />
        
        <div className={styles.heroImage}>
          <Image src='/static/hero-image.png' 
          width={700} height={400}
          />

        {/* Use context state.coffeeStores here. */}
        {coffeeStores?.length>0 && 
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Stores Near Me</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map(ele => (
                <Card
                  key={ele.fsq_id}
                  className={styles.card}
                  name={ele.name}
                  imgUrl={ele.imgUrl || "https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"}
                  href={`/coffee-store/${ele.fsq_id}`}
                />
              ))}
            </div>
          </div>
          }

          {coffeeStores?.length === 0 && props.coffeStore.length>0 && 
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Toronto Stores</h2>
            <div className={styles.cardLayout}>
              {props.coffeStore.map(ele => (
                <Card
                  key={ele.fsq_id}
                  className={styles.card}
                  name={ele.name}
                  imgUrl={ele.imgUrl || "https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"}
                  href={`/coffee-store/${ele.fsq_id}`}
                />
              ))}
            </div>
          </div>
          }
        </div>
      
      </main>
    </div>
  )
}
